{
  "_args": [
    [
      {
        "raw": "ng2-validation@^4.2.0",
        "scope": null,
        "escapedName": "ng2-validation",
        "name": "ng2-validation",
        "rawSpec": "^4.2.0",
        "spec": ">=4.2.0 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\Alessandro\\Documents\\Visual Studio 2015\\Projects\\Eventos.IO\\NgBasico"
    ]
  ],
  "_from": "ng2-validation@>=4.2.0 <5.0.0",
  "_id": "ng2-validation@4.2.0",
  "_inCache": true,
  "_location": "/ng2-validation",
  "_nodeVersion": "7.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/ng2-validation-4.2.0.tgz_1493862821387_0.13511881255544722"
  },
  "_npmUser": {
    "name": "yuyang041060120",
    "email": "15950456750@163.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ng2-validation@^4.2.0",
    "scope": null,
    "escapedName": "ng2-validation",
    "name": "ng2-validation",
    "rawSpec": "^4.2.0",
    "spec": ">=4.2.0 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ng2-validation/-/ng2-validation-4.2.0.tgz",
  "_shasum": "f38d441d3fb7e862155166480045aaff9ad11dbb",
  "_shrinkwrap": null,
  "_spec": "ng2-validation@^4.2.0",
  "_where": "C:\\Users\\Alessandro\\Documents\\Visual Studio 2015\\Projects\\Eventos.IO\\NgBasico",
  "author": {
    "name": "yuyang041060120",
    "email": "yuyang041060120@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yuyang041060120/angular2-validate/issues"
  },
  "dependencies": {
    "libphonenumber-js": "^0.4.5"
  },
  "description": "angular2 validation",
  "devDependencies": {
    "@angular/common": "4.0.0",
    "@angular/compiler": "4.0.0",
    "@angular/compiler-cli": "4.0.0",
    "@angular/core": "4.0.0",
    "@angular/forms": "4.0.0",
    "@angular/http": "4.0.0",
    "@angular/platform-browser": "4.0.0",
    "@angular/platform-browser-dynamic": "4.0.0",
    "@types/jasmine": "^2.2.29",
    "@types/node": "^7.0.12",
    "bootstrap": "^3.3.7",
    "core-js": "^2.4.1",
    "jasmine-core": "^2.4.1",
    "jasmine-data-provider": "^2.2.0",
    "karma": "^1.1.1",
    "karma-jasmine": "^1.0.2",
    "karma-phantomjs-launcher": "^1.0.1",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^2.0.3",
    "less": "^2.7.2",
    "less-loader": "^4.0.2",
    "phantomjs-prebuilt": "^2.1.7",
    "raw-loader": "^0.5.1",
    "reflect-metadata": "^0.1.3",
    "rimraf": "^2.5.4",
    "rollup": "^0.41.4",
    "rollup-plugin-typescript": "^0.8.1",
    "rxjs": "^5.2.0",
    "ts-loader": "^2.0.3",
    "typescript": "^2.2.2",
    "webpack": "^2.3.2",
    "webpack-dev-server": "^2.4.2",
    "zone.js": "^0.8.4"
  },
  "directories": {},
  "dist": {
    "shasum": "f38d441d3fb7e862155166480045aaff9ad11dbb",
    "tarball": "https://registry.npmjs.org/ng2-validation/-/ng2-validation-4.2.0.tgz"
  },
  "gitHead": "af1ede8bfdb6b7ce996861baec24e307ffaae328",
  "homepage": "https://github.com/yuyang041060120/angular2-validate#readme",
  "keywords": [
    "angular2",
    "validate",
    "validation"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "yuyang041060120",
      "email": "15950456750@163.com"
    }
  ],
  "name": "ng2-validation",
  "optionalDependencies": {},
  "readme": "# Description\n\nAngular2 custom validation, inspired by jQuery validation.\n\n# Install\n\n```bash\nnpm install ng2-validation --save\n```\n# Systemjs\n\n```bash\n'ng2-validation': 'npm:ng2-validation/bundles/ng2-validation.umd.js'\n```\n\n# Validators\n\n## angular2 built-in validators\n\n- required\n- minlength\n- maxlength\n- pattern\n\n## custom validators\n\n- rangeLength\n- min\n- gt\n- gte\n- max\n- lt\n- lte\n- range\n- digits\n- number\n- url\n- email\n- date\n- minDate\n- maxDate\n- dateISO\n- creditCard\n- json\n- base64\n- phone\n- uuid\n- equal\n- notEqual\n- equalTo\n- notEqualTo\n\n# Usage\n\n## template driven\n\nimport `FormsModule` and `CustomFormsModule` in *app.module.ts*\n\n```javascript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { CustomFormsModule } from 'ng2-validation'\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    imports: [BrowserModule, FormsModule, CustomFormsModule],\n    declarations: [AppComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n```\n\n### rangeLength\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [rangeLength]=\"[5, 9]\"/>\n<p *ngIf=\"field.errors?.rangeLength\">error message</p>\n```\n\n### min\n\n```html\n<input type=\"number\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [min]=\"10\"/>\n<p *ngIf=\"field.errors?.min\">error message</p>\n```\n\n### gt\n\n```html\n<input type=\"number\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [gt]=\"10\"/>\n<p *ngIf=\"field.errors?.gt\">error message</p>\n```\n\n### gte\n\n```html\n<input type=\"number\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [gte]=\"10\"/>\n<p *ngIf=\"field.errors?.gte\">error message</p>\n```\n\n### max\n\n```html\n<input type=\"number\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [max]=\"20\"/>\n<p *ngIf=\"field.errors?.max\">error message</p>\n```\n\n### lt\n\n```html\n<input type=\"number\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [lt]=\"20\"/>\n<p *ngIf=\"field.errors?.lt\">error message</p>\n```\n\n### lte\n\n```html\n<input type=\"number\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [lte]=\"20\"/>\n<p *ngIf=\"field.errors?.lte\">error message</p>\n```\n\n### range\n\n```html\n<input type=\"number\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [range]=\"[10, 20]\"/>\n<p *ngIf=\"field.errors?.range\">error message</p>\n```\n\n### digits\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" digits/>\n<p *ngIf=\"field.errors?.digits\">error message</p>\n```\n\n### number\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" number/>\n<p *ngIf=\"field.errors?.number\">error message</p>\n```\n\n### url\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" url/>\n<p *ngIf=\"field.errors?.url\">error message</p>\n```\n\n### email\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" email/>\n<p *ngIf=\"field.errors?.email\">error message</p>\n```\n\n### date\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" date/>\n<p *ngIf=\"field.errors?.date\">error message</p>\n```\n\n### minDate\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" minDate=\"2016-09-09\"/>\n<p *ngIf=\"field.errors?.minDate\">error message</p>\n```\n\n### maxDate\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" maxDate=\"2016-09-09\"/>\n<p *ngIf=\"field.errors?.maxDate\">error message</p>\n```\n\n### dateISO\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" dateISO/>\n<p *ngIf=\"field.errors?.dateISO\">error message</p>\n```\n\n### creditCard\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" creditCard/>\n<p *ngIf=\"field.errors?.creditCard\">error message</p>\n```\n\n### json\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" json/>\n<p *ngIf=\"field.errors?.json\">error message</p>\n```\n\n### base64\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" base64/>\n<p *ngIf=\"field.errors?.base64\">error message</p>\n```\n\n### phone\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" phone=\"CN\"/>\n<p *ngIf=\"field.errors?.phone\">error message</p>\n```\n\ndetails see [libphonenumber](https://github.com/halt-hammerzeit/libphonenumber-js)\n\n### uuid\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [uuid]=\"'all'\"/>\n<p *ngIf=\"field.errors?.uuid\">error message</p>\n```\n\n*default*: all\n\n**support**\n\n- 3\n- 4\n- 5\n- all\n\n### equal\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [equal]=\"'xxx'\"/>\n<p *ngIf=\"field.errors?.equal\">error message</p>\n```\n\n### equal\n\n```html\n<input type=\"text\" [(ngModel)]=\"model.field\" name=\"field\" #field=\"ngModel\" [notEqual]=\"'xxx'\"/>\n<p *ngIf=\"field.errors?.notEqual\">error message</p>\n```\n\n### equalTo\n\n```html\n<input type=\"password\" ngModel name=\"password\" #password=\"ngModel\" required/>\n<p *ngIf=\"password.errors?.required\">required error</p>\n<input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [equalTo]=\"password\"/>\n<p *ngIf=\"certainPassword.errors?.equalTo\">equalTo error</p>\n```\n\n### notEqualTo\n\n```html\n<input type=\"text\" ngModel name=\"password\" #password=\"ngModel\" required/>\n<p *ngIf=\"password.errors?.required\">required error</p>\n<input type=\"password\" ngModel name=\"certainPassword\" #certainPassword=\"ngModel\" [notEqualTo]=\"password\"/>\n<p *ngIf=\"certainPassword.errors?.equalTo\">equalTo error</p>\n```\n\n## model driven\n\nimport `ReactiveFormsModule` in *app.module.ts*\n\n```javascript\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n    imports: [BrowserModule, ReactiveFormsModule],\n    declarations: [AppComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n```\n\nimport `CustomValidators` in *app.component.ts*\n\n```javascript\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\n@Component({\n    selector: 'app',\n    template: require('./app.html')\n})\nexport class AppComponent {\n    form: FormGroup;\n\n    constructor() {\n        this.form = new FormGroup({\n            field: new FormControl('', CustomValidators.range([5, 9]))\n        });\n    }\n}\n```\n\n```html\n<input type=\"text\" formControlName=\"field\"/>\n<p *ngIf=\"demoForm.from.controls.field.errors?.rangeLength\">error message</p>\n```\n\n### rangeLength\n\n```javascript\nnew FormControl('', CustomValidators.rangeLength([5, 9]))\n```\n\n### min\n\n```javascript\nnew FormControl('', CustomValidators.min(10))\n```\n\n### gt\n\n```javascript\nnew FormControl('', CustomValidators.gt(10))\n```\n\n### max\n\n```javascript\nnew FormControl('', CustomValidators.max(20))\n```\n\n### lt\n\n```javascript\nnew FormControl('', CustomValidators.lt(20))\n```\n\n### range\n\n```javascript\nnew FormControl('', CustomValidators.range([10, 20]))\n```\n\n### digits\n\n```javascript\nnew FormControl('', CustomValidators.digits)\n```\n\n### number\n\n```javascript\nnew FormControl('', CustomValidators.number)\n```\n\n### url\n\n```javascript\nnew FormControl('', CustomValidators.url)\n```\n\n### email\n\n```javascript\nnew FormControl('', CustomValidators.email)\n```\n\n### date\n\n```javascript\nnew FormControl('', CustomValidators.date)\n```\n\n### minDate\n\n```javascript\nnew FormControl('', CustomValidators.minDate('2016-09-09'))\n```\n\n### maxDate\n\n```javascript\nnew FormControl('', CustomValidators.maxDate('2016-09-09'))\n```\n\n### dateISO\n\n```javascript\nnew FormControl('', CustomValidators.dateISO)\n```\n\n### creditCard\n\n```javascript\nnew FormControl('', CustomValidators.creditCard)\n```\n\n### json\n\n```javascript\nnew FormControl('', CustomValidators.json)\n```\n\n### base64\n\n```javascript\nnew FormControl('', CustomValidators.base64)\n```\n\n### phone\n\n```javascript\nnew FormControl('', CustomValidators.phone('zh-CN'))\n```\n\n### uuid\n\n```javascript\nnew FormControl('', CustomValidators.uuid('3'))\n```\n\n### equal\n\n```javascript\nnew FormControl('', CustomValidators.equal('xxx'))\n```\n\n### notEqual\n\n```javascript\nnew FormControl('', CustomValidators.notEqual('xxx'))\n```\n\n### equalTo\n\n```javascript\nlet password = new FormControl('', Validators.required);\nlet certainPassword = new FormControl('', CustomValidators.equalTo(password));\n\nthis.form = new FormGroup({\n  password: password,\n  certainPassword: certainPassword\n});\n```\n\n```html\n<form [formGroup]=\"form\">\n  <input type=\"password\" formControlName=\"password\"/>\n  <p *ngIf=\"form.controls.password.errors?.required\">required error</p>\n  <input type=\"password\" formControlName=\"certainPassword\"/>\n  <p *ngIf=\"form.controls.certainPassword.errors?.equalTo\">equalTo error</p>\n</form>\n```\n\n### notEqualTo\n\n```javascript\nlet password = new FormControl('', Validators.required);\nlet certainPassword = new FormControl('', CustomValidators.notEqualTo(password));\n\nthis.form = new FormGroup({\n  password: password,\n  certainPassword: certainPassword\n});\n```\n\n```html\n<form [formGroup]=\"form\">\n  <input type=\"password\" formControlName=\"password\"/>\n  <p *ngIf=\"form.controls.password.errors?.required\">required error</p>\n  <input type=\"password\" formControlName=\"certainPassword\"/>\n  <p *ngIf=\"form.controls.certainPassword.errors?.notEqualTo\">notEqualTo error</p>\n</form>\n```\n\n# License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yuyang041060120/angular2-validate.git"
  },
  "scripts": {
    "build": "npm run ngc && npm run rollup",
    "dev": "webpack-dev-server --port 4001 --watch",
    "example": "webpack --optimize-minimize",
    "ngc": "ngc",
    "prebuild": "rimraf dist",
    "prepublish": "npm run build",
    "prerollup": "rimraf bundles",
    "rollup": "rollup -c",
    "test": "karma start ./karma.conf.js"
  },
  "typings": "dist/index.d.ts",
  "version": "4.2.0"
}
